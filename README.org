#+title: Guix Siconos

* Introduction

These are some cut and paste examples for the usage of [[https://nonsmooth.gricad-pages.univ-grenoble-alpes.fr/siconos/index][Siconos]] with
[[https://guix.gnu.org/][Guix]] through the [[https://hpc.guix.info/][Guix HPC]] channel.

* Examples

** A c++ bouncing ball with reference check

#+name: bouncing-ball-computation
#+begin_src sh :dir /tmp :compile :file bouncing-ball-computation :results output silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos &&
  wget -q -N $addr/channels/siconos-2023-03-06.scm && \
    guix time-machine -C siconos-2023-03-06.scm -- \
         shell --pure \
         gcc-toolchain cmake make \
         coreutils grep dash \
         siconos@4.4 siconos-tutorials@4.4 -- \
         dash -c '
  tutorials=${GUIX_ENVIRONMENT}/share/siconos/siconos-tutorials
  bdir=$tutorials/examples/mechanics/BouncingBall
  cp $bdir/BouncingBallTS.ref .
  siconos $bdir/BouncingBallTS.cpp'
#+end_src

** A python bouncing ball

#+name: bouncing-ball-python-computation
#+begin_src sh :dir /tmp :compile :results output silent
   addr=https://raw.githubusercontent.com/siconos/guix-siconos
   wget -N $addr/channels/siconos-2023-03-06.scm && \
   guix time-machine -C siconos-2023-03-06.scm -- \
        shell --pure \
        python python-numpy python-matplotlib python-packaging \
        siconos@4.4.0.rc3 siconos-tutorials@4.4 dash coreutils sed -- \
        dash -c '
         tutorials=${GUIX_ENVIRONMENT}/share/siconos/siconos-tutorials
         bdir=$tutorials/examples/mechanics/BouncingBall
         sed "/matplotlib.use.*/a else:\n    matplotlib.use(\"TkAgg\")" \
         $bdir/BouncingBallTS.py | python3'
#+end_src


** A reproducible experiment of a cube falling on the ground

*** computation

#+name: cube-computation
#+begin_src sh :dir /tmp :compile :results output silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos
  wget -N $addr/channels/siconos-2023-03-06.scm && \
    guix time-machine -C siconos-2023-03-06.scm -- \
         shell --pure  \
         siconos@4.5.x siconos-tutorials dash -- \
         dash -c '
  tutorials=${GUIX_ENVIRONMENT}/share/siconos/siconos-tutorials
  siconos $tutorials/examples/mechanics/GeometricPrimitives/cube.py'
#+end_src

*** visualization

#+name: cube-visualization
#+begin_src sh :dir /tmp :compile :results output silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos
  wget -N $addr/channels/siconos-2023-03-06.scm && \
  guix time-machine -C siconos-2023-03-06.scm -- \
       environment --pure --ad-hoc \
       vtk siconos -- \
       siconos_vview cube.hdf5
#+end_src

** Open Cascade contactors

*** computation

An example of a slider crank with Open Cascade
contactors. The computation is done with a previous version of Siconos
(=siconos@4.2=) and a specific commit on siconos-tutorials:

#+name: occ_slider_crank
#+begin_src sh :dir /tmp :compile :results output silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos &&
  wget -N $addr/channels/siconos-2023-03-06.scm && \
    guix time-machine -C siconos-2023-03-06.scm -- \
         environment \
         --with-git-url=siconos-tutorials=https://github.com/siconos/siconos-tutorials \
         --with-commit=siconos-tutorials=7e1322d1c51224970967e46408b81a84e81b18a8 \
         --pure --ad-hoc \
         siconos@4.2  siconos-tutorials python pythonocc dash coreutils cmake make gcc-toolchain@7 sed -- \
         dash -c '
  tutorials=${GUIX_ENVIRONMENT}/share/siconos/siconos-tutorials
  cp -r $tutorials/examples/mechanics/OCC_Examples .
  cp -r $tutorials/examples/mechanics/Mechanisms .
  cd OCC_Examples
  sed -i "s/with_timer=True/with_timer=False/" occ_slider_crank.py
  siconos occ_slider_crank.py'
#+end_src

*** visualization

#+name: slider_crank_visualization
#+begin_src sh :dir /tmp :compile :results output silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos &&
  wget -N $addr/channels/siconos-2023-03-06.scm && \
    guix time-machine -C siconos-2023-03-06.scm -- \
         environment --pure --ad-hoc \
         pythonocc vtk siconos@4.2 dash -- dash -c '\
         cd OCC_Examples && \
         siconos_vview --cf-scale=0.05 occ_slider_crank.hdf5'
#+end_src


* Package build and compilation with a guix environment

** Package build with different sources

*** with transformation on repositories

An example with transformations on =siconos-tutorials= and =siconos=

#+name: siconos-transform-build
#+begin_src sh :dir /tmp :compile results output silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos &&
  wget -q -N $addr/channels/siconos-2021-06-08.scm && \
    guix time-machine -C siconos-2021-06-08.scm -- \
         environment \
         --with-git-url=siconos-tutorials=git@github.com:vacary/siconos-tutorials \
         --with-branch=siconos-tutorials=stress_tests \
         --with-git-url=siconos=git@github.com:vacary/siconos \
         --with-branch=siconos=optimize_2d_granular \
         --pure --ad-hoc gcc-toolchain cmake make grep coreutils dash \
         siconos siconos-tutorials -- \
         dash -c '
  tutorials=${GUIX_ENVIRONMENT}/share/siconos/siconos-tutorials
  siconos $tutorials/examples/mechanics/2DRigidBodies/Disks_stress_test.cpp'
#+end_src

*** with local sources

To check code before commit, there is the =--with-source= option:

#+name: siconos-master-build
#+begin_src sh :dir /tmp :compile :results output silent
  git clone --depth 1 git@github.com:siconos/siconos &&
  addr=https://raw.githubusercontent.com/siconos/guix-siconos &&
  wget -N $addr/channels/siconos-2021-05-05.scm && \
      guix time-machine -C siconos-2021-05-05.scm -- \
           environment --pure --ad-hoc siconos \
           --with-source=siconos=/tmp/siconos -- siconos --help
#+end_src


** Direct compilation with guix environment

This may be needed for debug through gdb and when modifying by hand
the installation is convenient. Otherwise, it is preferable to use the
transformations on repositories described above as they can be
included in scripts.


*** usage of inputs of siconos package

The =siconos= package is placed *before* =--ad-hoc= option in order to
provide the necessary =inputs= packages:

#+name: siconos-raw-build
#+begin_src sh :dir /tmp :compile :results output silent
  git clone --depth 1 git@github.com:siconos/siconos &&
   addr=https://raw.githubusercontent.com/siconos/guix-siconos &&
  wget -N $addr/channels/siconos-2021-05-05.scm && \
    guix time-machine -C siconos-2021-05-05.scm -- \
       environment siconos --pure --ad-hoc dash -- \
       dash -c 'mkdir -p siconos-build &&
       cd siconos-build &&
       cmake ../siconos -DWITH_BULLET=1 \
       -DCMAKE_INSTALL_PREFIX=/tmp/install-siconos &&
       make -j8 &&
       make install'
#+end_src

*** the c++ bouncing ball

With an installation from a direct compilation, the shebang part of
=siconos= script has not been replaced. It points to local system and
not into the =/gnu/store=. To avoid the usage of the wrong python
interpreter, it is necessary to call the =siconos= script with the
=python3= executable of the =python= package:

#+name: siconos-raw-build-bouncing-ball
#+begin_src sh :dir /tmp :compile :results output silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos &&
  wget -N $addr/channels/siconos-2021-06-08.scm && \
    guix time-machine -C siconos-2021-06-08.scm -- \
       environment --pure --ad-hoc \
       siconos-tutorials@4.4 \
       cmake make gcc-toolchain \
       python python-packaging \
       dash coreutils -- \
       dash -c '
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tmp/install-siconos/lib &&
  export PYTHONPATH=$PYTHONPATH:/tmp/install-siconos/lib/python3.8/site-packages
  tutorials=${GUIX_ENVIRONMENT}/share/siconos/siconos-tutorials
  cp $tutorials/examples/mechanics/BouncingBall/BouncingBallTS.ref .
  python3 /tmp/install-siconos/bin/siconos \
    $tutorials/examples/mechanics/BouncingBall/BouncingBallTS.cpp'
#+end_src

*** the python bouncing ball

#+name: siconos-raw-build-bouncing-ball-python
#+begin_src sh :dir /tmp :compile :results output silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos &&
  wget -N $addr/channels/siconos-2021-06-08.scm && \
    guix time-machine -C siconos-2021-06-08.scm -- \
       environment --pure --ad-hoc siconos-tutorials@4.4 \
       dash python python-numpy python-matplotlib python-packaging -- \
       dash -c '
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tmp/install-siconos/lib &&
        export PYTHONPATH=$PYTHONPATH:/tmp/install-siconos/lib/python3.8/site-packages
        tutorials=${GUIX_ENVIRONMENT}/share/siconos/siconos-tutorials
        python3 /tmp/install-siconos/bin/siconos \
        $tutorials/examples/mechanics/BouncingBall/BouncingBallTS.py'
#+end_src

*** the cube example

#+name: siconos-raw-build-cube-python
#+begin_src sh :dir /tmp :compile :results output silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos &&
  wget -N $addr/channels/siconos-2021-06-08.scm && \
    guix time-machine -C siconos-2021-06-08.scm -- \
       environment --pure --ad-hoc siconos-tutorials@4.4 \
       dash python python-numpy python-scipy python-h5py python-packaging -- \
       dash -c '
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tmp/install-siconos/lib &&
        export PYTHONPATH=$PYTHONPATH:/tmp/install-siconos/lib/python3.8/site-packages
        tutorials=${GUIX_ENVIRONMENT}/share/siconos/siconos-tutorials
        python3 /tmp/install-siconos/bin/siconos \
        $tutorials/examples/mechanics/GeometricPrimitives/cube.py'
#+end_src


* Configuration of the Guix channel for Siconos

See [[https://guix.gnu.org/manual/en/html_node/Channels.html][Guix channels]] for more information about how to configure guix channels.

** The channel file

- it must include the repository url:

#+begin_src scheme :exports code :eval no :tangle siconos-now.scm
  (cons
   (channel
    (name 'guix-hpc)
    (url "https://gitlab.inria.fr/bremond/guix-hpc.git")
    (branch "add-siconos"))
   %default-channels)
#+end_src

 - some branch specification may be added:

#+begin_src scheme :exports code :eval no :tangle siconos-now-guix-version-1-4-0.scm
  (list
   (channel
    (name 'guix-hpc)
    (url "https://gitlab.inria.fr/bremond/guix-hpc.git")
    (branch "add-siconos"))
   (name 'guix)
   (url "https://git.savannah.gnu.org/git/guix.git")
   (branch "version-1.4.0")))
#+end_src

 - for reproducibility commits are necessary:

#+begin_src scheme :eval no :tangle siconos-2023-03-06.scm
(list (channel
        (name 'guix-hpc)
        (url "https://gitlab.inria.fr/bremond/guix-hpc.git")
        (branch "add-siconos")
        (commit
          "e51151ff99fa8f97ffb9133f31745933dbb46ec8"))
      (channel
        (name 'guix)
        (url "https://git.savannah.gnu.org/git/guix.git")
        (branch "master")
        (commit
          "461577f0fce1b69a88a752857eeee2e9e1116d6c")
        (introduction
          (make-channel-introduction
            "9edb3f66fd807b096b48283debdcddccfea34bad"
            (openpgp-fingerprint
              "BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA")))))
#+end_src

** Download of channel files

Some specifications are available in the channel branch of this repository.
They are named with this convention:

 - without constraints, the channels file is named =siconos-now.scm=
 - with constraints on commits with the same date for Siconos channel
   and Guix channel: =siconos-<iso 8601 date of commits>.scm=
 - with different dates for Siconos channel and Guix channel:
   =siconos-<iso 8601 date of siconos commits>-<iso 8601 date of Guix commits>.scm=

#+begin_src sh :dir /tmp :results value silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos
  wget -q -N $addr/channels/siconos-now.scm
#+end_src

#+begin_src sh :dir /tmp :results value silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos
  wget -q -N $addr/channels/siconos-2021-05-05.scm
#+end_src


** How to form a reproducible specification:

#+name: fix-channels-with-wget
#+begin_src sh :dir /tmp :results raw :compile :results output silent
  addr=https://raw.githubusercontent.com/siconos/guix-siconos
  wget -q -N $addr/channels/siconos-now.scm && \
    guix time-machine  -C siconos-now.scm -- \
         describe -f channels 2>/dev/null > \
         siconos-$(date --iso-8601).scm
#+end_src


* COMMENT Org Babel settings

Local variables:
org-latex-minted-options:  '("frame" "single"))
org-confirm-babel-evaluate: nil
org-image-actual-width: nil
buffer-file-coding-system: utf-8-unix
End:
